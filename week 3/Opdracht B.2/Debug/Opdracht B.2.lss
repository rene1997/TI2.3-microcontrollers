
Opdracht B.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000088c  00000920  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000088c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800104  00800104  00000924  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000924  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000980  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000727  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000030f  00000000  00000000  0000114b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009cb  00000000  00000000  0000145a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  00001e28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001184c  00000000  00000000  00001f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000329  00000000  00000000  00013788  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00013ab1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003c2b  00000000  00000000  00013af9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	07 c1       	rjmp	.+526    	; 0x238 <__vector_10>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e0       	ldi	r26, 0x04	; 4
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 30       	cpi	r26, 0x0A	; 10
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	08 d1       	rcall	.+528    	; 0x2d4 <main>
  c4:	e1 c3       	rjmp	.+1986   	; 0x888 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <lcd_command>:
	 _delay_ms(25);
 }

 void lcd_command(unsigned char dat)
 {
	 PORTC = dat & 0xF0;		//hoge nibble
  c8:	98 2f       	mov	r25, r24
  ca:	90 7f       	andi	r25, 0xF0	; 240
  cc:	95 bb       	out	0x15, r25	; 21
	 PORTC = PORTC | 0x08;	//data
  ce:	ab 9a       	sbi	0x15, 3	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d0:	e9 e6       	ldi	r30, 0x69	; 105
  d2:	f8 e1       	ldi	r31, 0x18	; 24
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcd_command+0xc>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcd_command+0x12>
  da:	00 00       	nop
	 _delay_ms(25);
	 PORTC = 0x04;			//stop
  dc:	94 e0       	ldi	r25, 0x04	; 4
  de:	95 bb       	out	0x15, r25	; 21

	 PORTC = (dat & 0x0F) <<4;	//lage nibble
  e0:	f0 e1       	ldi	r31, 0x10	; 16
  e2:	8f 9f       	mul	r24, r31
  e4:	c0 01       	movw	r24, r0
  e6:	11 24       	eor	r1, r1
  e8:	85 bb       	out	0x15, r24	; 21
	 PORTC = PORTC | 0x08;
  ea:	ab 9a       	sbi	0x15, 3	; 21
  ec:	89 e6       	ldi	r24, 0x69	; 105
  ee:	98 e1       	ldi	r25, 0x18	; 24
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <lcd_command+0x28>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <lcd_command+0x2e>
  f6:	00 00       	nop

	 _delay_ms(25);
	 PORTC =  0x00;
  f8:	15 ba       	out	0x15, r1	; 21
  fa:	08 95       	ret

000000fc <init_lcd>:
 #include "LCD.h"

 void init_lcd()
 {
	 //return home8
	 DDRC = 0b11111111;
  fc:	8f ef       	ldi	r24, 0xFF	; 255
  fe:	84 bb       	out	0x14, r24	; 20
 100:	89 e6       	ldi	r24, 0x69	; 105
 102:	98 e1       	ldi	r25, 0x18	; 24
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <init_lcd+0x8>
 108:	00 c0       	rjmp	.+0      	; 0x10a <init_lcd+0xe>
 10a:	00 00       	nop
	 _delay_ms(25);
	 lcd_command(0x02);
 10c:	82 e0       	ldi	r24, 0x02	; 2
 10e:	dc df       	rcall	.-72     	; 0xc8 <lcd_command>
 110:	89 e6       	ldi	r24, 0x69	; 105
 112:	98 e1       	ldi	r25, 0x18	; 24
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <init_lcd+0x18>
 118:	00 c0       	rjmp	.+0      	; 0x11a <init_lcd+0x1e>
 11a:	00 00       	nop
	 _delay_ms(25);
	 //mode: 4 bits interface data, 2 lines, 5x data
	 lcd_command(0x28);
 11c:	88 e2       	ldi	r24, 0x28	; 40
 11e:	d4 df       	rcall	.-88     	; 0xc8 <lcd_command>
 120:	89 e6       	ldi	r24, 0x69	; 105
 122:	98 e1       	ldi	r25, 0x18	; 24
 124:	01 97       	sbiw	r24, 0x01	; 1
 126:	f1 f7       	brne	.-4      	; 0x124 <init_lcd+0x28>
 128:	00 c0       	rjmp	.+0      	; 0x12a <init_lcd+0x2e>
 12a:	00 00       	nop
	 _delay_ms(25);
	 // display: on, cursor off, blinking off
	 lcd_command( 0x0C );
 12c:	8c e0       	ldi	r24, 0x0C	; 12
 12e:	cc df       	rcall	.-104    	; 0xc8 <lcd_command>
 130:	89 e6       	ldi	r24, 0x69	; 105
 132:	98 e1       	ldi	r25, 0x18	; 24
 134:	01 97       	sbiw	r24, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <init_lcd+0x38>
 138:	00 c0       	rjmp	.+0      	; 0x13a <init_lcd+0x3e>
 13a:	00 00       	nop
	 _delay_ms(25);
	 //entry mode: cursor to right no shift
	 lcd_command(0x06);
 13c:	86 e0       	ldi	r24, 0x06	; 6
 13e:	c4 df       	rcall	.-120    	; 0xc8 <lcd_command>
 140:	89 e6       	ldi	r24, 0x69	; 105
 142:	98 e1       	ldi	r25, 0x18	; 24
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <init_lcd+0x48>
 148:	00 c0       	rjmp	.+0      	; 0x14a <init_lcd+0x4e>
 14a:	00 00       	nop
	 _delay_ms(25);
	 //Ram adress: 0, first position, line 1
	 lcd_command(0x80);
 14c:	80 e8       	ldi	r24, 0x80	; 128
 14e:	bc df       	rcall	.-136    	; 0xc8 <lcd_command>
 150:	89 e6       	ldi	r24, 0x69	; 105
 152:	98 e1       	ldi	r25, 0x18	; 24
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <init_lcd+0x58>
 158:	00 c0       	rjmp	.+0      	; 0x15a <init_lcd+0x5e>
 15a:	00 00       	nop
	 _delay_ms(25);
	 lcd_command(0x01);
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	b4 df       	rcall	.-152    	; 0xc8 <lcd_command>
 160:	89 e6       	ldi	r24, 0x69	; 105
 162:	98 e1       	ldi	r25, 0x18	; 24
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <init_lcd+0x68>
 168:	00 c0       	rjmp	.+0      	; 0x16a <init_lcd+0x6e>
 16a:	00 00       	nop
 16c:	08 95       	ret

0000016e <lcd_writeChar>:
	 PORTC =  0x00;
 }

 void lcd_writeChar( unsigned char dat)
 {
	 PORTC = dat & 0xF0;
 16e:	98 2f       	mov	r25, r24
 170:	90 7f       	andi	r25, 0xF0	; 240
 172:	95 bb       	out	0x15, r25	; 21
	 PORTC = PORTC | 0x0C;
 174:	95 b3       	in	r25, 0x15	; 21
 176:	9c 60       	ori	r25, 0x0C	; 12
 178:	95 bb       	out	0x15, r25	; 21
 17a:	e9 e6       	ldi	r30, 0x69	; 105
 17c:	f8 e1       	ldi	r31, 0x18	; 24
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <lcd_writeChar+0x10>
 182:	00 c0       	rjmp	.+0      	; 0x184 <lcd_writeChar+0x16>
 184:	00 00       	nop

	 _delay_ms(25);
	 PORTC = 0x04;
 186:	94 e0       	ldi	r25, 0x04	; 4
 188:	95 bb       	out	0x15, r25	; 21

	 PORTC = (dat & 0x0F) << 4;
 18a:	f0 e1       	ldi	r31, 0x10	; 16
 18c:	8f 9f       	mul	r24, r31
 18e:	c0 01       	movw	r24, r0
 190:	11 24       	eor	r1, r1
 192:	85 bb       	out	0x15, r24	; 21
	 PORTC = PORTC | 0x0C;
 194:	85 b3       	in	r24, 0x15	; 21
 196:	8c 60       	ori	r24, 0x0C	; 12
 198:	85 bb       	out	0x15, r24	; 21
 19a:	89 e6       	ldi	r24, 0x69	; 105
 19c:	98 e1       	ldi	r25, 0x18	; 24
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <lcd_writeChar+0x30>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <lcd_writeChar+0x36>
 1a4:	00 00       	nop

	 _delay_ms(25);
	 PORTC = 0x00;
 1a6:	15 ba       	out	0x15, r1	; 21
 1a8:	08 95       	ret

000001aa <lcd_setCursorPosition>:
 }

 void lcd_setCursorPosition(int position)
 {
	char value;
	if(position >= 16)
 1aa:	80 31       	cpi	r24, 0x10	; 16
 1ac:	91 05       	cpc	r25, r1
 1ae:	1c f0       	brlt	.+6      	; 0x1b6 <lcd_setCursorPosition+0xc>
	{
		position = position - 16;
		value = 0xc0 + position;
		lcd_command(value);
 1b0:	80 55       	subi	r24, 0x50	; 80
 1b2:	8a cf       	rjmp	.-236    	; 0xc8 <lcd_command>
 1b4:	08 95       	ret
	}
	else
	{
		value = 0x80 + position;
		lcd_command(value);
 1b6:	80 58       	subi	r24, 0x80	; 128
 1b8:	87 cf       	rjmp	.-242    	; 0xc8 <lcd_command>
 1ba:	08 95       	ret

000001bc <lcd_writeLine>:
	}
 }

 void lcd_writeLine( char text[], int line)
 {
 1bc:	ef 92       	push	r14
 1be:	ff 92       	push	r15
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	ec 01       	movw	r28, r24
	 // eerst de eerste 8 karakters = regel 1
	 // eerste pos regel 1
	 if(line == 2)
 1ca:	62 30       	cpi	r22, 0x02	; 2
 1cc:	71 05       	cpc	r23, r1
 1ce:	b9 f4       	brne	.+46     	; 0x1fe <lcd_writeLine+0x42>
	 {
		 lcd_command(0xC0);
 1d0:	80 ec       	ldi	r24, 0xC0	; 192
 1d2:	7a df       	rcall	.-268    	; 0xc8 <lcd_command>
 1d4:	7e 01       	movw	r14, r28
			for (int i=0; i < strlen(text); i++) {
 1d6:	00 e0       	ldi	r16, 0x00	; 0
 1d8:	10 e0       	ldi	r17, 0x00	; 0
 1da:	06 c0       	rjmp	.+12     	; 0x1e8 <lcd_writeLine+0x2c>
			 lcd_writeChar( text[i] );
 1dc:	f7 01       	movw	r30, r14
 1de:	81 91       	ld	r24, Z+
 1e0:	7f 01       	movw	r14, r30
 1e2:	c5 df       	rcall	.-118    	; 0x16e <lcd_writeChar>
	 // eerst de eerste 8 karakters = regel 1
	 // eerste pos regel 1
	 if(line == 2)
	 {
		 lcd_command(0xC0);
			for (int i=0; i < strlen(text); i++) {
 1e4:	0f 5f       	subi	r16, 0xFF	; 255
 1e6:	1f 4f       	sbci	r17, 0xFF	; 255
 1e8:	fe 01       	movw	r30, r28
 1ea:	01 90       	ld	r0, Z+
 1ec:	00 20       	and	r0, r0
 1ee:	e9 f7       	brne	.-6      	; 0x1ea <lcd_writeLine+0x2e>
 1f0:	31 97       	sbiw	r30, 0x01	; 1
 1f2:	ec 1b       	sub	r30, r28
 1f4:	fd 0b       	sbc	r31, r29
 1f6:	0e 17       	cp	r16, r30
 1f8:	1f 07       	cpc	r17, r31
 1fa:	80 f3       	brcs	.-32     	; 0x1dc <lcd_writeLine+0x20>
 1fc:	16 c0       	rjmp	.+44     	; 0x22a <lcd_writeLine+0x6e>
			 lcd_writeChar( text[i] );
			}
	 }
	 else
	 {
	 	 lcd_command(0x80);
 1fe:	80 e8       	ldi	r24, 0x80	; 128
 200:	63 df       	rcall	.-314    	; 0xc8 <lcd_command>
 202:	7e 01       	movw	r14, r28
	 	 for (int i=0; i < strlen(text); i++) {
 204:	00 e0       	ldi	r16, 0x00	; 0
 206:	10 e0       	ldi	r17, 0x00	; 0
 208:	06 c0       	rjmp	.+12     	; 0x216 <lcd_writeLine+0x5a>
		 	 lcd_writeChar( text[i] );
 20a:	f7 01       	movw	r30, r14
 20c:	81 91       	ld	r24, Z+
 20e:	7f 01       	movw	r14, r30
 210:	ae df       	rcall	.-164    	; 0x16e <lcd_writeChar>
			}
	 }
	 else
	 {
	 	 lcd_command(0x80);
	 	 for (int i=0; i < strlen(text); i++) {
 212:	0f 5f       	subi	r16, 0xFF	; 255
 214:	1f 4f       	sbci	r17, 0xFF	; 255
 216:	fe 01       	movw	r30, r28
 218:	01 90       	ld	r0, Z+
 21a:	00 20       	and	r0, r0
 21c:	e9 f7       	brne	.-6      	; 0x218 <lcd_writeLine+0x5c>
 21e:	31 97       	sbiw	r30, 0x01	; 1
 220:	ec 1b       	sub	r30, r28
 222:	fd 0b       	sbc	r31, r29
 224:	0e 17       	cp	r16, r30
 226:	1f 07       	cpc	r17, r31
 228:	80 f3       	brcs	.-32     	; 0x20a <lcd_writeLine+0x4e>
		 	 lcd_writeChar( text[i] );
	 	 }
	 }
 }
 22a:	df 91       	pop	r29
 22c:	cf 91       	pop	r28
 22e:	1f 91       	pop	r17
 230:	0f 91       	pop	r16
 232:	ff 90       	pop	r15
 234:	ef 90       	pop	r14
 236:	08 95       	ret

00000238 <__vector_10>:

char numbers[4];
int amountpressed = 0;

ISR( TIMER2_OVF_vect )
{
 238:	1f 92       	push	r1
 23a:	0f 92       	push	r0
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	0f 92       	push	r0
 240:	11 24       	eor	r1, r1
 242:	0b b6       	in	r0, 0x3b	; 59
 244:	0f 92       	push	r0
 246:	2f 93       	push	r18
 248:	3f 93       	push	r19
 24a:	4f 93       	push	r20
 24c:	5f 93       	push	r21
 24e:	6f 93       	push	r22
 250:	7f 93       	push	r23
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
 256:	af 93       	push	r26
 258:	bf 93       	push	r27
 25a:	ef 93       	push	r30
 25c:	ff 93       	push	r31
	sprintf(numbers,"%d",amountpressed);
 25e:	80 91 05 01 	lds	r24, 0x0105
 262:	8f 93       	push	r24
 264:	80 91 04 01 	lds	r24, 0x0104
 268:	8f 93       	push	r24
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	91 e0       	ldi	r25, 0x01	; 1
 26e:	9f 93       	push	r25
 270:	8f 93       	push	r24
 272:	86 e0       	ldi	r24, 0x06	; 6
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	9f 93       	push	r25
 278:	8f 93       	push	r24
 27a:	3d d0       	rcall	.+122    	; 0x2f6 <sprintf>
	lcd_writeLine(numbers, 1);
 27c:	61 e0       	ldi	r22, 0x01	; 1
 27e:	70 e0       	ldi	r23, 0x00	; 0
 280:	86 e0       	ldi	r24, 0x06	; 6
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	9b df       	rcall	.-202    	; 0x1bc <lcd_writeLine>
	amountpressed ++;
 286:	80 91 04 01 	lds	r24, 0x0104
 28a:	90 91 05 01 	lds	r25, 0x0105
 28e:	01 96       	adiw	r24, 0x01	; 1
 290:	90 93 05 01 	sts	0x0105, r25
 294:	80 93 04 01 	sts	0x0104, r24

	lcd_setCursorPosition(0);
 298:	80 e0       	ldi	r24, 0x00	; 0
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	86 df       	rcall	.-244    	; 0x1aa <lcd_setCursorPosition>
	TCNT2 = -1;
 29e:	8f ef       	ldi	r24, 0xFF	; 255
 2a0:	84 bd       	out	0x24, r24	; 36
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	0f 90       	pop	r0
 2aa:	0f 90       	pop	r0
 2ac:	0f 90       	pop	r0
}
 2ae:	ff 91       	pop	r31
 2b0:	ef 91       	pop	r30
 2b2:	bf 91       	pop	r27
 2b4:	af 91       	pop	r26
 2b6:	9f 91       	pop	r25
 2b8:	8f 91       	pop	r24
 2ba:	7f 91       	pop	r23
 2bc:	6f 91       	pop	r22
 2be:	5f 91       	pop	r21
 2c0:	4f 91       	pop	r20
 2c2:	3f 91       	pop	r19
 2c4:	2f 91       	pop	r18
 2c6:	0f 90       	pop	r0
 2c8:	0b be       	out	0x3b, r0	; 59
 2ca:	0f 90       	pop	r0
 2cc:	0f be       	out	0x3f, r0	; 63
 2ce:	0f 90       	pop	r0
 2d0:	1f 90       	pop	r1
 2d2:	18 95       	reti

000002d4 <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	init_lcd();
 2d4:	13 df       	rcall	.-474    	; 0xfc <init_lcd>
 2d6:	89 e6       	ldi	r24, 0x69	; 105
 2d8:	98 e1       	ldi	r25, 0x18	; 24
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <main+0x6>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <main+0xc>
 2e0:	00 00       	nop
	_delay_ms(25);
	TCNT2 = -1; // of TCNT2=0xf6
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	84 bd       	out	0x24, r24	; 36
	TIMSK |= BIT(6); // T2 overflow interrupt enable, p. 162
 2e6:	87 b7       	in	r24, 0x37	; 55
 2e8:	80 64       	ori	r24, 0x40	; 64
 2ea:	87 bf       	out	0x37, r24	; 55
	TCCR2 = 0b00011111; //ext counting, rising
 2ec:	8f e1       	ldi	r24, 0x1F	; 31
 2ee:	85 bd       	out	0x25, r24	; 37

	DDRD &= ~BIT(7);
 2f0:	8f 98       	cbi	0x11, 7	; 17

	sei();
 2f2:	78 94       	sei
	while(1)
	{
		

	}
 2f4:	ff cf       	rjmp	.-2      	; 0x2f4 <main+0x20>

000002f6 <sprintf>:
 2f6:	0f 93       	push	r16
 2f8:	1f 93       	push	r17
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	cd b7       	in	r28, 0x3d	; 61
 300:	de b7       	in	r29, 0x3e	; 62
 302:	2e 97       	sbiw	r28, 0x0e	; 14
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	f8 94       	cli
 308:	de bf       	out	0x3e, r29	; 62
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	cd bf       	out	0x3d, r28	; 61
 30e:	0d 89       	ldd	r16, Y+21	; 0x15
 310:	1e 89       	ldd	r17, Y+22	; 0x16
 312:	86 e0       	ldi	r24, 0x06	; 6
 314:	8c 83       	std	Y+4, r24	; 0x04
 316:	1a 83       	std	Y+2, r17	; 0x02
 318:	09 83       	std	Y+1, r16	; 0x01
 31a:	8f ef       	ldi	r24, 0xFF	; 255
 31c:	9f e7       	ldi	r25, 0x7F	; 127
 31e:	9e 83       	std	Y+6, r25	; 0x06
 320:	8d 83       	std	Y+5, r24	; 0x05
 322:	ae 01       	movw	r20, r28
 324:	47 5e       	subi	r20, 0xE7	; 231
 326:	5f 4f       	sbci	r21, 0xFF	; 255
 328:	6f 89       	ldd	r22, Y+23	; 0x17
 32a:	78 8d       	ldd	r23, Y+24	; 0x18
 32c:	ce 01       	movw	r24, r28
 32e:	01 96       	adiw	r24, 0x01	; 1
 330:	11 d0       	rcall	.+34     	; 0x354 <vfprintf>
 332:	2f 81       	ldd	r18, Y+7	; 0x07
 334:	38 85       	ldd	r19, Y+8	; 0x08
 336:	f8 01       	movw	r30, r16
 338:	e2 0f       	add	r30, r18
 33a:	f3 1f       	adc	r31, r19
 33c:	10 82       	st	Z, r1
 33e:	2e 96       	adiw	r28, 0x0e	; 14
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
 34a:	df 91       	pop	r29
 34c:	cf 91       	pop	r28
 34e:	1f 91       	pop	r17
 350:	0f 91       	pop	r16
 352:	08 95       	ret

00000354 <vfprintf>:
 354:	2f 92       	push	r2
 356:	3f 92       	push	r3
 358:	4f 92       	push	r4
 35a:	5f 92       	push	r5
 35c:	6f 92       	push	r6
 35e:	7f 92       	push	r7
 360:	8f 92       	push	r8
 362:	9f 92       	push	r9
 364:	af 92       	push	r10
 366:	bf 92       	push	r11
 368:	cf 92       	push	r12
 36a:	df 92       	push	r13
 36c:	ef 92       	push	r14
 36e:	ff 92       	push	r15
 370:	0f 93       	push	r16
 372:	1f 93       	push	r17
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	cd b7       	in	r28, 0x3d	; 61
 37a:	de b7       	in	r29, 0x3e	; 62
 37c:	2c 97       	sbiw	r28, 0x0c	; 12
 37e:	0f b6       	in	r0, 0x3f	; 63
 380:	f8 94       	cli
 382:	de bf       	out	0x3e, r29	; 62
 384:	0f be       	out	0x3f, r0	; 63
 386:	cd bf       	out	0x3d, r28	; 61
 388:	7c 01       	movw	r14, r24
 38a:	6b 01       	movw	r12, r22
 38c:	8a 01       	movw	r16, r20
 38e:	fc 01       	movw	r30, r24
 390:	17 82       	std	Z+7, r1	; 0x07
 392:	16 82       	std	Z+6, r1	; 0x06
 394:	83 81       	ldd	r24, Z+3	; 0x03
 396:	81 ff       	sbrs	r24, 1
 398:	b0 c1       	rjmp	.+864    	; 0x6fa <vfprintf+0x3a6>
 39a:	ce 01       	movw	r24, r28
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	4c 01       	movw	r8, r24
 3a0:	f7 01       	movw	r30, r14
 3a2:	93 81       	ldd	r25, Z+3	; 0x03
 3a4:	f6 01       	movw	r30, r12
 3a6:	93 fd       	sbrc	r25, 3
 3a8:	85 91       	lpm	r24, Z+
 3aa:	93 ff       	sbrs	r25, 3
 3ac:	81 91       	ld	r24, Z+
 3ae:	6f 01       	movw	r12, r30
 3b0:	88 23       	and	r24, r24
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <vfprintf+0x62>
 3b4:	9e c1       	rjmp	.+828    	; 0x6f2 <vfprintf+0x39e>
 3b6:	85 32       	cpi	r24, 0x25	; 37
 3b8:	39 f4       	brne	.+14     	; 0x3c8 <vfprintf+0x74>
 3ba:	93 fd       	sbrc	r25, 3
 3bc:	85 91       	lpm	r24, Z+
 3be:	93 ff       	sbrs	r25, 3
 3c0:	81 91       	ld	r24, Z+
 3c2:	6f 01       	movw	r12, r30
 3c4:	85 32       	cpi	r24, 0x25	; 37
 3c6:	21 f4       	brne	.+8      	; 0x3d0 <vfprintf+0x7c>
 3c8:	b7 01       	movw	r22, r14
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	c7 d1       	rcall	.+910    	; 0x75c <fputc>
 3ce:	e8 cf       	rjmp	.-48     	; 0x3a0 <vfprintf+0x4c>
 3d0:	51 2c       	mov	r5, r1
 3d2:	31 2c       	mov	r3, r1
 3d4:	20 e0       	ldi	r18, 0x00	; 0
 3d6:	20 32       	cpi	r18, 0x20	; 32
 3d8:	a0 f4       	brcc	.+40     	; 0x402 <vfprintf+0xae>
 3da:	8b 32       	cpi	r24, 0x2B	; 43
 3dc:	69 f0       	breq	.+26     	; 0x3f8 <vfprintf+0xa4>
 3de:	30 f4       	brcc	.+12     	; 0x3ec <vfprintf+0x98>
 3e0:	80 32       	cpi	r24, 0x20	; 32
 3e2:	59 f0       	breq	.+22     	; 0x3fa <vfprintf+0xa6>
 3e4:	83 32       	cpi	r24, 0x23	; 35
 3e6:	69 f4       	brne	.+26     	; 0x402 <vfprintf+0xae>
 3e8:	20 61       	ori	r18, 0x10	; 16
 3ea:	2c c0       	rjmp	.+88     	; 0x444 <vfprintf+0xf0>
 3ec:	8d 32       	cpi	r24, 0x2D	; 45
 3ee:	39 f0       	breq	.+14     	; 0x3fe <vfprintf+0xaa>
 3f0:	80 33       	cpi	r24, 0x30	; 48
 3f2:	39 f4       	brne	.+14     	; 0x402 <vfprintf+0xae>
 3f4:	21 60       	ori	r18, 0x01	; 1
 3f6:	26 c0       	rjmp	.+76     	; 0x444 <vfprintf+0xf0>
 3f8:	22 60       	ori	r18, 0x02	; 2
 3fa:	24 60       	ori	r18, 0x04	; 4
 3fc:	23 c0       	rjmp	.+70     	; 0x444 <vfprintf+0xf0>
 3fe:	28 60       	ori	r18, 0x08	; 8
 400:	21 c0       	rjmp	.+66     	; 0x444 <vfprintf+0xf0>
 402:	27 fd       	sbrc	r18, 7
 404:	27 c0       	rjmp	.+78     	; 0x454 <vfprintf+0x100>
 406:	30 ed       	ldi	r19, 0xD0	; 208
 408:	38 0f       	add	r19, r24
 40a:	3a 30       	cpi	r19, 0x0A	; 10
 40c:	78 f4       	brcc	.+30     	; 0x42c <vfprintf+0xd8>
 40e:	26 ff       	sbrs	r18, 6
 410:	06 c0       	rjmp	.+12     	; 0x41e <vfprintf+0xca>
 412:	fa e0       	ldi	r31, 0x0A	; 10
 414:	5f 9e       	mul	r5, r31
 416:	30 0d       	add	r19, r0
 418:	11 24       	eor	r1, r1
 41a:	53 2e       	mov	r5, r19
 41c:	13 c0       	rjmp	.+38     	; 0x444 <vfprintf+0xf0>
 41e:	8a e0       	ldi	r24, 0x0A	; 10
 420:	38 9e       	mul	r3, r24
 422:	30 0d       	add	r19, r0
 424:	11 24       	eor	r1, r1
 426:	33 2e       	mov	r3, r19
 428:	20 62       	ori	r18, 0x20	; 32
 42a:	0c c0       	rjmp	.+24     	; 0x444 <vfprintf+0xf0>
 42c:	8e 32       	cpi	r24, 0x2E	; 46
 42e:	21 f4       	brne	.+8      	; 0x438 <vfprintf+0xe4>
 430:	26 fd       	sbrc	r18, 6
 432:	5f c1       	rjmp	.+702    	; 0x6f2 <vfprintf+0x39e>
 434:	20 64       	ori	r18, 0x40	; 64
 436:	06 c0       	rjmp	.+12     	; 0x444 <vfprintf+0xf0>
 438:	8c 36       	cpi	r24, 0x6C	; 108
 43a:	11 f4       	brne	.+4      	; 0x440 <vfprintf+0xec>
 43c:	20 68       	ori	r18, 0x80	; 128
 43e:	02 c0       	rjmp	.+4      	; 0x444 <vfprintf+0xf0>
 440:	88 36       	cpi	r24, 0x68	; 104
 442:	41 f4       	brne	.+16     	; 0x454 <vfprintf+0x100>
 444:	f6 01       	movw	r30, r12
 446:	93 fd       	sbrc	r25, 3
 448:	85 91       	lpm	r24, Z+
 44a:	93 ff       	sbrs	r25, 3
 44c:	81 91       	ld	r24, Z+
 44e:	6f 01       	movw	r12, r30
 450:	81 11       	cpse	r24, r1
 452:	c1 cf       	rjmp	.-126    	; 0x3d6 <vfprintf+0x82>
 454:	98 2f       	mov	r25, r24
 456:	9f 7d       	andi	r25, 0xDF	; 223
 458:	95 54       	subi	r25, 0x45	; 69
 45a:	93 30       	cpi	r25, 0x03	; 3
 45c:	28 f4       	brcc	.+10     	; 0x468 <vfprintf+0x114>
 45e:	0c 5f       	subi	r16, 0xFC	; 252
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	ff e3       	ldi	r31, 0x3F	; 63
 464:	f9 83       	std	Y+1, r31	; 0x01
 466:	0d c0       	rjmp	.+26     	; 0x482 <vfprintf+0x12e>
 468:	83 36       	cpi	r24, 0x63	; 99
 46a:	31 f0       	breq	.+12     	; 0x478 <vfprintf+0x124>
 46c:	83 37       	cpi	r24, 0x73	; 115
 46e:	71 f0       	breq	.+28     	; 0x48c <vfprintf+0x138>
 470:	83 35       	cpi	r24, 0x53	; 83
 472:	09 f0       	breq	.+2      	; 0x476 <vfprintf+0x122>
 474:	57 c0       	rjmp	.+174    	; 0x524 <vfprintf+0x1d0>
 476:	21 c0       	rjmp	.+66     	; 0x4ba <vfprintf+0x166>
 478:	f8 01       	movw	r30, r16
 47a:	80 81       	ld	r24, Z
 47c:	89 83       	std	Y+1, r24	; 0x01
 47e:	0e 5f       	subi	r16, 0xFE	; 254
 480:	1f 4f       	sbci	r17, 0xFF	; 255
 482:	44 24       	eor	r4, r4
 484:	43 94       	inc	r4
 486:	51 2c       	mov	r5, r1
 488:	54 01       	movw	r10, r8
 48a:	14 c0       	rjmp	.+40     	; 0x4b4 <vfprintf+0x160>
 48c:	38 01       	movw	r6, r16
 48e:	f2 e0       	ldi	r31, 0x02	; 2
 490:	6f 0e       	add	r6, r31
 492:	71 1c       	adc	r7, r1
 494:	f8 01       	movw	r30, r16
 496:	a0 80       	ld	r10, Z
 498:	b1 80       	ldd	r11, Z+1	; 0x01
 49a:	26 ff       	sbrs	r18, 6
 49c:	03 c0       	rjmp	.+6      	; 0x4a4 <vfprintf+0x150>
 49e:	65 2d       	mov	r22, r5
 4a0:	70 e0       	ldi	r23, 0x00	; 0
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <vfprintf+0x154>
 4a4:	6f ef       	ldi	r22, 0xFF	; 255
 4a6:	7f ef       	ldi	r23, 0xFF	; 255
 4a8:	c5 01       	movw	r24, r10
 4aa:	2c 87       	std	Y+12, r18	; 0x0c
 4ac:	4c d1       	rcall	.+664    	; 0x746 <strnlen>
 4ae:	2c 01       	movw	r4, r24
 4b0:	83 01       	movw	r16, r6
 4b2:	2c 85       	ldd	r18, Y+12	; 0x0c
 4b4:	2f 77       	andi	r18, 0x7F	; 127
 4b6:	22 2e       	mov	r2, r18
 4b8:	16 c0       	rjmp	.+44     	; 0x4e6 <vfprintf+0x192>
 4ba:	38 01       	movw	r6, r16
 4bc:	f2 e0       	ldi	r31, 0x02	; 2
 4be:	6f 0e       	add	r6, r31
 4c0:	71 1c       	adc	r7, r1
 4c2:	f8 01       	movw	r30, r16
 4c4:	a0 80       	ld	r10, Z
 4c6:	b1 80       	ldd	r11, Z+1	; 0x01
 4c8:	26 ff       	sbrs	r18, 6
 4ca:	03 c0       	rjmp	.+6      	; 0x4d2 <vfprintf+0x17e>
 4cc:	65 2d       	mov	r22, r5
 4ce:	70 e0       	ldi	r23, 0x00	; 0
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <vfprintf+0x182>
 4d2:	6f ef       	ldi	r22, 0xFF	; 255
 4d4:	7f ef       	ldi	r23, 0xFF	; 255
 4d6:	c5 01       	movw	r24, r10
 4d8:	2c 87       	std	Y+12, r18	; 0x0c
 4da:	2a d1       	rcall	.+596    	; 0x730 <strnlen_P>
 4dc:	2c 01       	movw	r4, r24
 4de:	2c 85       	ldd	r18, Y+12	; 0x0c
 4e0:	20 68       	ori	r18, 0x80	; 128
 4e2:	22 2e       	mov	r2, r18
 4e4:	83 01       	movw	r16, r6
 4e6:	23 fc       	sbrc	r2, 3
 4e8:	19 c0       	rjmp	.+50     	; 0x51c <vfprintf+0x1c8>
 4ea:	83 2d       	mov	r24, r3
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	48 16       	cp	r4, r24
 4f0:	59 06       	cpc	r5, r25
 4f2:	a0 f4       	brcc	.+40     	; 0x51c <vfprintf+0x1c8>
 4f4:	b7 01       	movw	r22, r14
 4f6:	80 e2       	ldi	r24, 0x20	; 32
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	30 d1       	rcall	.+608    	; 0x75c <fputc>
 4fc:	3a 94       	dec	r3
 4fe:	f5 cf       	rjmp	.-22     	; 0x4ea <vfprintf+0x196>
 500:	f5 01       	movw	r30, r10
 502:	27 fc       	sbrc	r2, 7
 504:	85 91       	lpm	r24, Z+
 506:	27 fe       	sbrs	r2, 7
 508:	81 91       	ld	r24, Z+
 50a:	5f 01       	movw	r10, r30
 50c:	b7 01       	movw	r22, r14
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	25 d1       	rcall	.+586    	; 0x75c <fputc>
 512:	31 10       	cpse	r3, r1
 514:	3a 94       	dec	r3
 516:	f1 e0       	ldi	r31, 0x01	; 1
 518:	4f 1a       	sub	r4, r31
 51a:	51 08       	sbc	r5, r1
 51c:	41 14       	cp	r4, r1
 51e:	51 04       	cpc	r5, r1
 520:	79 f7       	brne	.-34     	; 0x500 <vfprintf+0x1ac>
 522:	de c0       	rjmp	.+444    	; 0x6e0 <vfprintf+0x38c>
 524:	84 36       	cpi	r24, 0x64	; 100
 526:	11 f0       	breq	.+4      	; 0x52c <vfprintf+0x1d8>
 528:	89 36       	cpi	r24, 0x69	; 105
 52a:	31 f5       	brne	.+76     	; 0x578 <vfprintf+0x224>
 52c:	f8 01       	movw	r30, r16
 52e:	27 ff       	sbrs	r18, 7
 530:	07 c0       	rjmp	.+14     	; 0x540 <vfprintf+0x1ec>
 532:	60 81       	ld	r22, Z
 534:	71 81       	ldd	r23, Z+1	; 0x01
 536:	82 81       	ldd	r24, Z+2	; 0x02
 538:	93 81       	ldd	r25, Z+3	; 0x03
 53a:	0c 5f       	subi	r16, 0xFC	; 252
 53c:	1f 4f       	sbci	r17, 0xFF	; 255
 53e:	08 c0       	rjmp	.+16     	; 0x550 <vfprintf+0x1fc>
 540:	60 81       	ld	r22, Z
 542:	71 81       	ldd	r23, Z+1	; 0x01
 544:	07 2e       	mov	r0, r23
 546:	00 0c       	add	r0, r0
 548:	88 0b       	sbc	r24, r24
 54a:	99 0b       	sbc	r25, r25
 54c:	0e 5f       	subi	r16, 0xFE	; 254
 54e:	1f 4f       	sbci	r17, 0xFF	; 255
 550:	2f 76       	andi	r18, 0x6F	; 111
 552:	72 2e       	mov	r7, r18
 554:	97 ff       	sbrs	r25, 7
 556:	09 c0       	rjmp	.+18     	; 0x56a <vfprintf+0x216>
 558:	90 95       	com	r25
 55a:	80 95       	com	r24
 55c:	70 95       	com	r23
 55e:	61 95       	neg	r22
 560:	7f 4f       	sbci	r23, 0xFF	; 255
 562:	8f 4f       	sbci	r24, 0xFF	; 255
 564:	9f 4f       	sbci	r25, 0xFF	; 255
 566:	20 68       	ori	r18, 0x80	; 128
 568:	72 2e       	mov	r7, r18
 56a:	2a e0       	ldi	r18, 0x0A	; 10
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	a4 01       	movw	r20, r8
 570:	2d d1       	rcall	.+602    	; 0x7cc <__ultoa_invert>
 572:	a8 2e       	mov	r10, r24
 574:	a8 18       	sub	r10, r8
 576:	43 c0       	rjmp	.+134    	; 0x5fe <vfprintf+0x2aa>
 578:	85 37       	cpi	r24, 0x75	; 117
 57a:	29 f4       	brne	.+10     	; 0x586 <vfprintf+0x232>
 57c:	2f 7e       	andi	r18, 0xEF	; 239
 57e:	b2 2e       	mov	r11, r18
 580:	2a e0       	ldi	r18, 0x0A	; 10
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	25 c0       	rjmp	.+74     	; 0x5d0 <vfprintf+0x27c>
 586:	f2 2f       	mov	r31, r18
 588:	f9 7f       	andi	r31, 0xF9	; 249
 58a:	bf 2e       	mov	r11, r31
 58c:	8f 36       	cpi	r24, 0x6F	; 111
 58e:	c1 f0       	breq	.+48     	; 0x5c0 <vfprintf+0x26c>
 590:	18 f4       	brcc	.+6      	; 0x598 <vfprintf+0x244>
 592:	88 35       	cpi	r24, 0x58	; 88
 594:	79 f0       	breq	.+30     	; 0x5b4 <vfprintf+0x260>
 596:	ad c0       	rjmp	.+346    	; 0x6f2 <vfprintf+0x39e>
 598:	80 37       	cpi	r24, 0x70	; 112
 59a:	19 f0       	breq	.+6      	; 0x5a2 <vfprintf+0x24e>
 59c:	88 37       	cpi	r24, 0x78	; 120
 59e:	21 f0       	breq	.+8      	; 0x5a8 <vfprintf+0x254>
 5a0:	a8 c0       	rjmp	.+336    	; 0x6f2 <vfprintf+0x39e>
 5a2:	2f 2f       	mov	r18, r31
 5a4:	20 61       	ori	r18, 0x10	; 16
 5a6:	b2 2e       	mov	r11, r18
 5a8:	b4 fe       	sbrs	r11, 4
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <vfprintf+0x272>
 5ac:	8b 2d       	mov	r24, r11
 5ae:	84 60       	ori	r24, 0x04	; 4
 5b0:	b8 2e       	mov	r11, r24
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <vfprintf+0x272>
 5b4:	24 ff       	sbrs	r18, 4
 5b6:	0a c0       	rjmp	.+20     	; 0x5cc <vfprintf+0x278>
 5b8:	9f 2f       	mov	r25, r31
 5ba:	96 60       	ori	r25, 0x06	; 6
 5bc:	b9 2e       	mov	r11, r25
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <vfprintf+0x278>
 5c0:	28 e0       	ldi	r18, 0x08	; 8
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	05 c0       	rjmp	.+10     	; 0x5d0 <vfprintf+0x27c>
 5c6:	20 e1       	ldi	r18, 0x10	; 16
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <vfprintf+0x27c>
 5cc:	20 e1       	ldi	r18, 0x10	; 16
 5ce:	32 e0       	ldi	r19, 0x02	; 2
 5d0:	f8 01       	movw	r30, r16
 5d2:	b7 fe       	sbrs	r11, 7
 5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <vfprintf+0x290>
 5d6:	60 81       	ld	r22, Z
 5d8:	71 81       	ldd	r23, Z+1	; 0x01
 5da:	82 81       	ldd	r24, Z+2	; 0x02
 5dc:	93 81       	ldd	r25, Z+3	; 0x03
 5de:	0c 5f       	subi	r16, 0xFC	; 252
 5e0:	1f 4f       	sbci	r17, 0xFF	; 255
 5e2:	06 c0       	rjmp	.+12     	; 0x5f0 <vfprintf+0x29c>
 5e4:	60 81       	ld	r22, Z
 5e6:	71 81       	ldd	r23, Z+1	; 0x01
 5e8:	80 e0       	ldi	r24, 0x00	; 0
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	a4 01       	movw	r20, r8
 5f2:	ec d0       	rcall	.+472    	; 0x7cc <__ultoa_invert>
 5f4:	a8 2e       	mov	r10, r24
 5f6:	a8 18       	sub	r10, r8
 5f8:	fb 2d       	mov	r31, r11
 5fa:	ff 77       	andi	r31, 0x7F	; 127
 5fc:	7f 2e       	mov	r7, r31
 5fe:	76 fe       	sbrs	r7, 6
 600:	0b c0       	rjmp	.+22     	; 0x618 <vfprintf+0x2c4>
 602:	37 2d       	mov	r19, r7
 604:	3e 7f       	andi	r19, 0xFE	; 254
 606:	a5 14       	cp	r10, r5
 608:	50 f4       	brcc	.+20     	; 0x61e <vfprintf+0x2ca>
 60a:	74 fe       	sbrs	r7, 4
 60c:	0a c0       	rjmp	.+20     	; 0x622 <vfprintf+0x2ce>
 60e:	72 fc       	sbrc	r7, 2
 610:	08 c0       	rjmp	.+16     	; 0x622 <vfprintf+0x2ce>
 612:	37 2d       	mov	r19, r7
 614:	3e 7e       	andi	r19, 0xEE	; 238
 616:	05 c0       	rjmp	.+10     	; 0x622 <vfprintf+0x2ce>
 618:	ba 2c       	mov	r11, r10
 61a:	37 2d       	mov	r19, r7
 61c:	03 c0       	rjmp	.+6      	; 0x624 <vfprintf+0x2d0>
 61e:	ba 2c       	mov	r11, r10
 620:	01 c0       	rjmp	.+2      	; 0x624 <vfprintf+0x2d0>
 622:	b5 2c       	mov	r11, r5
 624:	34 ff       	sbrs	r19, 4
 626:	0d c0       	rjmp	.+26     	; 0x642 <vfprintf+0x2ee>
 628:	fe 01       	movw	r30, r28
 62a:	ea 0d       	add	r30, r10
 62c:	f1 1d       	adc	r31, r1
 62e:	80 81       	ld	r24, Z
 630:	80 33       	cpi	r24, 0x30	; 48
 632:	11 f4       	brne	.+4      	; 0x638 <vfprintf+0x2e4>
 634:	39 7e       	andi	r19, 0xE9	; 233
 636:	09 c0       	rjmp	.+18     	; 0x64a <vfprintf+0x2f6>
 638:	32 ff       	sbrs	r19, 2
 63a:	06 c0       	rjmp	.+12     	; 0x648 <vfprintf+0x2f4>
 63c:	b3 94       	inc	r11
 63e:	b3 94       	inc	r11
 640:	04 c0       	rjmp	.+8      	; 0x64a <vfprintf+0x2f6>
 642:	83 2f       	mov	r24, r19
 644:	86 78       	andi	r24, 0x86	; 134
 646:	09 f0       	breq	.+2      	; 0x64a <vfprintf+0x2f6>
 648:	b3 94       	inc	r11
 64a:	33 fd       	sbrc	r19, 3
 64c:	12 c0       	rjmp	.+36     	; 0x672 <vfprintf+0x31e>
 64e:	30 ff       	sbrs	r19, 0
 650:	06 c0       	rjmp	.+12     	; 0x65e <vfprintf+0x30a>
 652:	5a 2c       	mov	r5, r10
 654:	b3 14       	cp	r11, r3
 656:	18 f4       	brcc	.+6      	; 0x65e <vfprintf+0x30a>
 658:	53 0c       	add	r5, r3
 65a:	5b 18       	sub	r5, r11
 65c:	b3 2c       	mov	r11, r3
 65e:	b3 14       	cp	r11, r3
 660:	60 f4       	brcc	.+24     	; 0x67a <vfprintf+0x326>
 662:	b7 01       	movw	r22, r14
 664:	80 e2       	ldi	r24, 0x20	; 32
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	3c 87       	std	Y+12, r19	; 0x0c
 66a:	78 d0       	rcall	.+240    	; 0x75c <fputc>
 66c:	b3 94       	inc	r11
 66e:	3c 85       	ldd	r19, Y+12	; 0x0c
 670:	f6 cf       	rjmp	.-20     	; 0x65e <vfprintf+0x30a>
 672:	b3 14       	cp	r11, r3
 674:	10 f4       	brcc	.+4      	; 0x67a <vfprintf+0x326>
 676:	3b 18       	sub	r3, r11
 678:	01 c0       	rjmp	.+2      	; 0x67c <vfprintf+0x328>
 67a:	31 2c       	mov	r3, r1
 67c:	34 ff       	sbrs	r19, 4
 67e:	11 c0       	rjmp	.+34     	; 0x6a2 <vfprintf+0x34e>
 680:	b7 01       	movw	r22, r14
 682:	80 e3       	ldi	r24, 0x30	; 48
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	3c 87       	std	Y+12, r19	; 0x0c
 688:	69 d0       	rcall	.+210    	; 0x75c <fputc>
 68a:	3c 85       	ldd	r19, Y+12	; 0x0c
 68c:	32 ff       	sbrs	r19, 2
 68e:	16 c0       	rjmp	.+44     	; 0x6bc <vfprintf+0x368>
 690:	31 fd       	sbrc	r19, 1
 692:	03 c0       	rjmp	.+6      	; 0x69a <vfprintf+0x346>
 694:	88 e7       	ldi	r24, 0x78	; 120
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	02 c0       	rjmp	.+4      	; 0x69e <vfprintf+0x34a>
 69a:	88 e5       	ldi	r24, 0x58	; 88
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	b7 01       	movw	r22, r14
 6a0:	0c c0       	rjmp	.+24     	; 0x6ba <vfprintf+0x366>
 6a2:	83 2f       	mov	r24, r19
 6a4:	86 78       	andi	r24, 0x86	; 134
 6a6:	51 f0       	breq	.+20     	; 0x6bc <vfprintf+0x368>
 6a8:	31 ff       	sbrs	r19, 1
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <vfprintf+0x35c>
 6ac:	8b e2       	ldi	r24, 0x2B	; 43
 6ae:	01 c0       	rjmp	.+2      	; 0x6b2 <vfprintf+0x35e>
 6b0:	80 e2       	ldi	r24, 0x20	; 32
 6b2:	37 fd       	sbrc	r19, 7
 6b4:	8d e2       	ldi	r24, 0x2D	; 45
 6b6:	b7 01       	movw	r22, r14
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	50 d0       	rcall	.+160    	; 0x75c <fputc>
 6bc:	a5 14       	cp	r10, r5
 6be:	30 f4       	brcc	.+12     	; 0x6cc <vfprintf+0x378>
 6c0:	b7 01       	movw	r22, r14
 6c2:	80 e3       	ldi	r24, 0x30	; 48
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	4a d0       	rcall	.+148    	; 0x75c <fputc>
 6c8:	5a 94       	dec	r5
 6ca:	f8 cf       	rjmp	.-16     	; 0x6bc <vfprintf+0x368>
 6cc:	aa 94       	dec	r10
 6ce:	f4 01       	movw	r30, r8
 6d0:	ea 0d       	add	r30, r10
 6d2:	f1 1d       	adc	r31, r1
 6d4:	80 81       	ld	r24, Z
 6d6:	b7 01       	movw	r22, r14
 6d8:	90 e0       	ldi	r25, 0x00	; 0
 6da:	40 d0       	rcall	.+128    	; 0x75c <fputc>
 6dc:	a1 10       	cpse	r10, r1
 6de:	f6 cf       	rjmp	.-20     	; 0x6cc <vfprintf+0x378>
 6e0:	33 20       	and	r3, r3
 6e2:	09 f4       	brne	.+2      	; 0x6e6 <vfprintf+0x392>
 6e4:	5d ce       	rjmp	.-838    	; 0x3a0 <vfprintf+0x4c>
 6e6:	b7 01       	movw	r22, r14
 6e8:	80 e2       	ldi	r24, 0x20	; 32
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	37 d0       	rcall	.+110    	; 0x75c <fputc>
 6ee:	3a 94       	dec	r3
 6f0:	f7 cf       	rjmp	.-18     	; 0x6e0 <vfprintf+0x38c>
 6f2:	f7 01       	movw	r30, r14
 6f4:	86 81       	ldd	r24, Z+6	; 0x06
 6f6:	97 81       	ldd	r25, Z+7	; 0x07
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <vfprintf+0x3aa>
 6fa:	8f ef       	ldi	r24, 0xFF	; 255
 6fc:	9f ef       	ldi	r25, 0xFF	; 255
 6fe:	2c 96       	adiw	r28, 0x0c	; 12
 700:	0f b6       	in	r0, 0x3f	; 63
 702:	f8 94       	cli
 704:	de bf       	out	0x3e, r29	; 62
 706:	0f be       	out	0x3f, r0	; 63
 708:	cd bf       	out	0x3d, r28	; 61
 70a:	df 91       	pop	r29
 70c:	cf 91       	pop	r28
 70e:	1f 91       	pop	r17
 710:	0f 91       	pop	r16
 712:	ff 90       	pop	r15
 714:	ef 90       	pop	r14
 716:	df 90       	pop	r13
 718:	cf 90       	pop	r12
 71a:	bf 90       	pop	r11
 71c:	af 90       	pop	r10
 71e:	9f 90       	pop	r9
 720:	8f 90       	pop	r8
 722:	7f 90       	pop	r7
 724:	6f 90       	pop	r6
 726:	5f 90       	pop	r5
 728:	4f 90       	pop	r4
 72a:	3f 90       	pop	r3
 72c:	2f 90       	pop	r2
 72e:	08 95       	ret

00000730 <strnlen_P>:
 730:	fc 01       	movw	r30, r24
 732:	05 90       	lpm	r0, Z+
 734:	61 50       	subi	r22, 0x01	; 1
 736:	70 40       	sbci	r23, 0x00	; 0
 738:	01 10       	cpse	r0, r1
 73a:	d8 f7       	brcc	.-10     	; 0x732 <strnlen_P+0x2>
 73c:	80 95       	com	r24
 73e:	90 95       	com	r25
 740:	8e 0f       	add	r24, r30
 742:	9f 1f       	adc	r25, r31
 744:	08 95       	ret

00000746 <strnlen>:
 746:	fc 01       	movw	r30, r24
 748:	61 50       	subi	r22, 0x01	; 1
 74a:	70 40       	sbci	r23, 0x00	; 0
 74c:	01 90       	ld	r0, Z+
 74e:	01 10       	cpse	r0, r1
 750:	d8 f7       	brcc	.-10     	; 0x748 <strnlen+0x2>
 752:	80 95       	com	r24
 754:	90 95       	com	r25
 756:	8e 0f       	add	r24, r30
 758:	9f 1f       	adc	r25, r31
 75a:	08 95       	ret

0000075c <fputc>:
 75c:	0f 93       	push	r16
 75e:	1f 93       	push	r17
 760:	cf 93       	push	r28
 762:	df 93       	push	r29
 764:	fb 01       	movw	r30, r22
 766:	23 81       	ldd	r18, Z+3	; 0x03
 768:	21 fd       	sbrc	r18, 1
 76a:	03 c0       	rjmp	.+6      	; 0x772 <fputc+0x16>
 76c:	8f ef       	ldi	r24, 0xFF	; 255
 76e:	9f ef       	ldi	r25, 0xFF	; 255
 770:	28 c0       	rjmp	.+80     	; 0x7c2 <fputc+0x66>
 772:	22 ff       	sbrs	r18, 2
 774:	16 c0       	rjmp	.+44     	; 0x7a2 <fputc+0x46>
 776:	46 81       	ldd	r20, Z+6	; 0x06
 778:	57 81       	ldd	r21, Z+7	; 0x07
 77a:	24 81       	ldd	r18, Z+4	; 0x04
 77c:	35 81       	ldd	r19, Z+5	; 0x05
 77e:	42 17       	cp	r20, r18
 780:	53 07       	cpc	r21, r19
 782:	44 f4       	brge	.+16     	; 0x794 <fputc+0x38>
 784:	a0 81       	ld	r26, Z
 786:	b1 81       	ldd	r27, Z+1	; 0x01
 788:	9d 01       	movw	r18, r26
 78a:	2f 5f       	subi	r18, 0xFF	; 255
 78c:	3f 4f       	sbci	r19, 0xFF	; 255
 78e:	31 83       	std	Z+1, r19	; 0x01
 790:	20 83       	st	Z, r18
 792:	8c 93       	st	X, r24
 794:	26 81       	ldd	r18, Z+6	; 0x06
 796:	37 81       	ldd	r19, Z+7	; 0x07
 798:	2f 5f       	subi	r18, 0xFF	; 255
 79a:	3f 4f       	sbci	r19, 0xFF	; 255
 79c:	37 83       	std	Z+7, r19	; 0x07
 79e:	26 83       	std	Z+6, r18	; 0x06
 7a0:	10 c0       	rjmp	.+32     	; 0x7c2 <fputc+0x66>
 7a2:	eb 01       	movw	r28, r22
 7a4:	09 2f       	mov	r16, r25
 7a6:	18 2f       	mov	r17, r24
 7a8:	00 84       	ldd	r0, Z+8	; 0x08
 7aa:	f1 85       	ldd	r31, Z+9	; 0x09
 7ac:	e0 2d       	mov	r30, r0
 7ae:	09 95       	icall
 7b0:	89 2b       	or	r24, r25
 7b2:	e1 f6       	brne	.-72     	; 0x76c <fputc+0x10>
 7b4:	8e 81       	ldd	r24, Y+6	; 0x06
 7b6:	9f 81       	ldd	r25, Y+7	; 0x07
 7b8:	01 96       	adiw	r24, 0x01	; 1
 7ba:	9f 83       	std	Y+7, r25	; 0x07
 7bc:	8e 83       	std	Y+6, r24	; 0x06
 7be:	81 2f       	mov	r24, r17
 7c0:	90 2f       	mov	r25, r16
 7c2:	df 91       	pop	r29
 7c4:	cf 91       	pop	r28
 7c6:	1f 91       	pop	r17
 7c8:	0f 91       	pop	r16
 7ca:	08 95       	ret

000007cc <__ultoa_invert>:
 7cc:	fa 01       	movw	r30, r20
 7ce:	aa 27       	eor	r26, r26
 7d0:	28 30       	cpi	r18, 0x08	; 8
 7d2:	51 f1       	breq	.+84     	; 0x828 <__ultoa_invert+0x5c>
 7d4:	20 31       	cpi	r18, 0x10	; 16
 7d6:	81 f1       	breq	.+96     	; 0x838 <__ultoa_invert+0x6c>
 7d8:	e8 94       	clt
 7da:	6f 93       	push	r22
 7dc:	6e 7f       	andi	r22, 0xFE	; 254
 7de:	6e 5f       	subi	r22, 0xFE	; 254
 7e0:	7f 4f       	sbci	r23, 0xFF	; 255
 7e2:	8f 4f       	sbci	r24, 0xFF	; 255
 7e4:	9f 4f       	sbci	r25, 0xFF	; 255
 7e6:	af 4f       	sbci	r26, 0xFF	; 255
 7e8:	b1 e0       	ldi	r27, 0x01	; 1
 7ea:	3e d0       	rcall	.+124    	; 0x868 <__ultoa_invert+0x9c>
 7ec:	b4 e0       	ldi	r27, 0x04	; 4
 7ee:	3c d0       	rcall	.+120    	; 0x868 <__ultoa_invert+0x9c>
 7f0:	67 0f       	add	r22, r23
 7f2:	78 1f       	adc	r23, r24
 7f4:	89 1f       	adc	r24, r25
 7f6:	9a 1f       	adc	r25, r26
 7f8:	a1 1d       	adc	r26, r1
 7fa:	68 0f       	add	r22, r24
 7fc:	79 1f       	adc	r23, r25
 7fe:	8a 1f       	adc	r24, r26
 800:	91 1d       	adc	r25, r1
 802:	a1 1d       	adc	r26, r1
 804:	6a 0f       	add	r22, r26
 806:	71 1d       	adc	r23, r1
 808:	81 1d       	adc	r24, r1
 80a:	91 1d       	adc	r25, r1
 80c:	a1 1d       	adc	r26, r1
 80e:	20 d0       	rcall	.+64     	; 0x850 <__ultoa_invert+0x84>
 810:	09 f4       	brne	.+2      	; 0x814 <__ultoa_invert+0x48>
 812:	68 94       	set
 814:	3f 91       	pop	r19
 816:	2a e0       	ldi	r18, 0x0A	; 10
 818:	26 9f       	mul	r18, r22
 81a:	11 24       	eor	r1, r1
 81c:	30 19       	sub	r19, r0
 81e:	30 5d       	subi	r19, 0xD0	; 208
 820:	31 93       	st	Z+, r19
 822:	de f6       	brtc	.-74     	; 0x7da <__ultoa_invert+0xe>
 824:	cf 01       	movw	r24, r30
 826:	08 95       	ret
 828:	46 2f       	mov	r20, r22
 82a:	47 70       	andi	r20, 0x07	; 7
 82c:	40 5d       	subi	r20, 0xD0	; 208
 82e:	41 93       	st	Z+, r20
 830:	b3 e0       	ldi	r27, 0x03	; 3
 832:	0f d0       	rcall	.+30     	; 0x852 <__ultoa_invert+0x86>
 834:	c9 f7       	brne	.-14     	; 0x828 <__ultoa_invert+0x5c>
 836:	f6 cf       	rjmp	.-20     	; 0x824 <__ultoa_invert+0x58>
 838:	46 2f       	mov	r20, r22
 83a:	4f 70       	andi	r20, 0x0F	; 15
 83c:	40 5d       	subi	r20, 0xD0	; 208
 83e:	4a 33       	cpi	r20, 0x3A	; 58
 840:	18 f0       	brcs	.+6      	; 0x848 <__ultoa_invert+0x7c>
 842:	49 5d       	subi	r20, 0xD9	; 217
 844:	31 fd       	sbrc	r19, 1
 846:	40 52       	subi	r20, 0x20	; 32
 848:	41 93       	st	Z+, r20
 84a:	02 d0       	rcall	.+4      	; 0x850 <__ultoa_invert+0x84>
 84c:	a9 f7       	brne	.-22     	; 0x838 <__ultoa_invert+0x6c>
 84e:	ea cf       	rjmp	.-44     	; 0x824 <__ultoa_invert+0x58>
 850:	b4 e0       	ldi	r27, 0x04	; 4
 852:	a6 95       	lsr	r26
 854:	97 95       	ror	r25
 856:	87 95       	ror	r24
 858:	77 95       	ror	r23
 85a:	67 95       	ror	r22
 85c:	ba 95       	dec	r27
 85e:	c9 f7       	brne	.-14     	; 0x852 <__ultoa_invert+0x86>
 860:	00 97       	sbiw	r24, 0x00	; 0
 862:	61 05       	cpc	r22, r1
 864:	71 05       	cpc	r23, r1
 866:	08 95       	ret
 868:	9b 01       	movw	r18, r22
 86a:	ac 01       	movw	r20, r24
 86c:	0a 2e       	mov	r0, r26
 86e:	06 94       	lsr	r0
 870:	57 95       	ror	r21
 872:	47 95       	ror	r20
 874:	37 95       	ror	r19
 876:	27 95       	ror	r18
 878:	ba 95       	dec	r27
 87a:	c9 f7       	brne	.-14     	; 0x86e <__ultoa_invert+0xa2>
 87c:	62 0f       	add	r22, r18
 87e:	73 1f       	adc	r23, r19
 880:	84 1f       	adc	r24, r20
 882:	95 1f       	adc	r25, r21
 884:	a0 1d       	adc	r26, r0
 886:	08 95       	ret

00000888 <_exit>:
 888:	f8 94       	cli

0000088a <__stop_program>:
 88a:	ff cf       	rjmp	.-2      	; 0x88a <__stop_program>
